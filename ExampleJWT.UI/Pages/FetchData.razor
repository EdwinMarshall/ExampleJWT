@page "/fetchdata"
@using ExampleJWT.Models.Models
@inject ISocialApi _api;
<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>
<button class="btn btn-primary" @onclick="GetData">Get Data</button>

@if (forecasts == null)
{
    <p><em></em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;
    private string Token { get; set; }

    protected override async void OnAfterRender(bool firstRender)
    {
        string token = await _localStorage.ReadToken("token", _storage);

        if (string.IsNullOrEmpty(token))
        {
            _navigation.NavigateTo("/Login");
        }
        Token = token;
    }


    private async Task GetData()
    {
        var socialApi = RestService.For<ISocialApi>(AppSettings.BaseUriApi, new RefitSettings()
        {
            AuthorizationHeaderValueGetter = () =>
                Task.FromResult(Token)
        });

        var result = await socialApi.WeatherForecast_Get();

        if (result.IsSuccessStatusCode)
        {
            if (result.Content != null)
            {
                forecasts = result.Content.ToArray();
            }
        }
        else
        {
            if (result.Error.StatusCode.ToString().Equals("Unauthorized"))
            {
                _navigation.NavigateTo("/");
            }
        }
    }
}
